#Задача 1===============================================================
def createfile(filename):
    f = open(filename, 'w')
    for i in range(1, 9+1):
        for j in range(i):
            s = str(i)+' '
            f.write(s)
        print(file = f)
    f.close()
    return print('Файл створено')

print('''1. Описати підпрограму (ФУНКЦІЮ), яка утворює текстовий файл із 9
 рядків, у першому з яких одна літера '1', у другому – дві літери 
 '2', ... , у дев’ятому – дев’ять літер '9'.''')

file_name = input("Введіть ім'я файлу - ")+'.txt'
createfile(file_name)

g = open(file_name)
print(g.read())
g.close()


#Задача 2===============================================================
from random import randint

print('''\n2. У текстовому файлі F записана послідовність цілих чисел, які
 розділяються пропусками. Побудувати файл G, який містив би всі 
 компоненти файла F:
а) які є невід’ємними;
б) які є парними числами;
в) які одночасно діляться на 3 і на 5.''')
print()

n = int(input('Введіть розмір послідовності - '))
input('Створити файл F і записати послідовність')
f = open('F.txt', 'w')
for i in range(n):
    f.write(str(randint(-20, 20))+' ')
f.close()
print('Файл створено')

f = open('F.txt')
line = f.read()
f.close()
print(line)

a = []
j = -1
for i in range(len(line)):
    if line[i] == ' ':
        a.append(int(line[j+1:i]))
        j = i

dict = {1: 'а) Невід’ємні: ', 2: 'б) Парні числа: ',
        3: 'в) Числа які одночасно діляться на 3 і на 5: '}
for elem in a:
    if elem >= 0:
        dict[1] += str(elem)+' '
    if elem%2 == 0:
        dict[2] += str(elem) + ' '
    if elem%3 == 0 and elem%5 == 0:
        dict[3] += str(elem) + ' '

input('Побудувати файл G')
g = open('G.txt', 'w')
for i in range(1, 4):
    print(dict[i], file = g)
g.close()
print('Файл створено')

g = open('G.txt')
print(g.read())
g.close()


#Задача 3===============================================================
def find_symbol1(b):
    f.seek(0)
    sum1 = 0
    for line in f:
        if line[0] == b:
            sum1 += 1
    return sum1


def find_symbol2(c):
    f.seek(0)
    sum2 = 0
    for line in f:
        if line[len(line)-2] == c:
            sum2 += 1
    return sum2

print('''\n3. Дано текстовий файл, що містить принаймні один непорожній рядок.
 Описати підпрограму, що визначає, скільки рядків текстового файла:
 a) починаються із заданого символа;
 б) закінчуються заданим символом.''')

n = int(input('Введіть кількість рядків - '))
file_name = input("Введіть ім'я файлу - ")+'.txt'

print('Введіть дані рядків')
f = open(file_name, 'w')
for i in range(1, n+1):
    s = input('{} - '.format(i))
    print(s, file = f)
f.close()
print('Створено файл')

a = input('Символ для пошуку - ')

f = open(file_name)
print('Кількість рядків, які починаються із заданого символа:', find_symbol1(a))
print('Кількість рядків, які закінчуються заданим символом:', find_symbol2(a))
f.close()


#Задача 4===============================================================
import random
import shelve #Підключаємо модуль shelve, він виконує роль словника

print('''\n4. Задано деякий словник. Потрібно зберегти цей словник у файл за
 допомогою модуля shelve. Відновити дані з файлу і вивести на екран.''')

dict = {} #створюємо словник
for i in range(1,6): #заповнюємо словник
    dict[i] = random.randint(1, 10) #генеруємо числа
print(dict) #вивести словник

with shelve.open('123') as f: #відкриваємо файл за допомогою модуля
    f['d'] = dict #заповнення файлу під ключем 'd'
f.close() #закрити файл

with shelve.open('123') as f: #відкриваємо файл за допомогою модуля
    print(f['d']) #вивести дані файлу за допомогою ключа
f.close() #закрити файл


#Задача 5===============================================================
import random
import pickle #Підключаємо модуль pickle для перетворення даних у двійковий код

print('''\n5. Задано деякий словник. Потрібно сереалізувати цей об'єкт у файл
 з допомогою модуля pickle. Відновити дані з файлу і вивести на екран.''')

dict = {} #створюємо словник
for i in range(1,6): #заповнюємо словник
    dict[i] = random.randint(1, 10) #генеруємо числа
print(dict) #вивести словник

#Перший варіант
with open('123', 'wb') as f: #відкриваємо файл для запису у двійковому коді
    pickle.dump(dict, f) #заповнення файлу 

with open('123', 'rb') as f: #відкриваємо файл для читання у двійковому коді
    a = pickle.load(f) #присвоїти дані файлу

#Другий варіант
f = open('123', 'wb')
pickle.dump(dict, f)

f = open('123', 'rb')
a = pickle.load(f)

print(a) #вивести значення змінної